{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/data/Attachment.ts","src/data/Guide.ts","src/data/GuideDataService.ts","src/data/GuidePage.ts","src/data/GuideStatus.ts","src/data/GuideType.ts","src/data/MultiString.ts","src/data/PageData.ts","src/data/PartyReference.ts","src/data/Quote.ts","src/data/QuoteDataService.ts","src/data/QuoteStatus.ts","src/data/Tip.ts","src/data/TipDataService.ts","src/data/TipStatus.ts","src/data/index.ts","src/guidance/GuidanceDialog.ts","src/index.ts","src/intro_guidance/IntroGuidanceDialog.ts","src/intro_guidance/IntroGuidanceService.ts","src/intro_guidance/index.ts","src/quotes/QuotesService.ts","src/rest/GuideResources.ts","src/rest/QuoteResources.ts","src/rest/TipResources.ts","src/rest/index.ts","src/tips/TipsService.ts","temp/pip-suite-guidance-html.min.js"],"names":[],"mappings":"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","file":"pip-suite-guidance.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export class Attachment {\n    public id?: string;\n    public uri?: string;\n    public name?: string;\n} ","import { GuidePage } from './GuidePage';\n\n\nexport class Guide {\n\n    /* Identification */\n    public id: string;\n    public name?: string;\n    public type: string;\n    public app?: string;\n    public min_ver?: number;\n    public max_ver?: number;\n\n    /* Automatically managed fields */\n    public create_time: Date;\n\n    /* Content */\n    public pages: GuidePage[];\n\n    /* Search */\n    public tags?: string[];\n    public all_tags?: string[];\n\n    /* Status */\n    public status?: string;\n\n    /* Custom fields */\n    public custom_hdr?: any;\n    public custom_dat?: any;\n}\n","import { IGuideDataService } from './IGuideDataService';\nimport { Guide } from './Guide';\nimport { GuideType } from './GuideType';\nimport { GuideStatus } from './GuideStatus';\nimport { PageData } from './PageData';\n\nclass GuideData implements IGuideDataService {\n    private RESOURCE: string = 'guides';\n    private RESOURCE_RANDOM: string = 'guidesRandom'; \n\n    private PAGE_SIZE: number = 100;\n    private PAGE_START: number = 0;\n    private PAGE_TOTAL: boolean = true;\n\n    constructor(\n        private pipRest: pip.rest.IRestService,\n        private pipFormat: pip.services.IFormat\n    ) {\n        \"ngInject\";\n\n    }\n\n    public readGuides(params: any, successCallback?: (data: PageData) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE).page(params, successCallback, errorCallback);\n    }\n\n    public readRandomGuide(params: any, successCallback?: (data: Guide) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE_RANDOM).get(params, successCallback, errorCallback);\n    }\n\n    public readIntroGuides(params: any, successCallback?: (data: PageData) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        let filter = params.filter || {};\n        filter.type = GuideType.Introduction;\n        filter.status = GuideStatus.Completed; \n        params.filer = this.pipFormat.filterToString(filter);\n\n        return this.pipRest.getResource(this.RESOURCE).page(\n            params,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public readGuide(id: string, successCallback?: (data: Guide) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource(this.RESOURCE).get(\n            { guide_id: id },\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public createGuide(data: Guide, successCallback?: (data: Guide) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).save(\n            null,\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public updateGuide(id: string, data: Guide, successCallback?: (data: Guide) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).update(\n            { guide_id: id },\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public deleteGuide(id: string, successCallback?: () => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).remove(\n            { guide_id: id },\n            null,\n            successCallback,\n            errorCallback\n        );\n    }\n}\n\n\nangular\n    .module('pipGuideData', ['pipRest', 'pipServices'])\n    .service('pipGuideData', GuideData);\n\n\n","import { MultiString } from './MultiString';\n\nexport class GuidePage {\n    public title: MultiString;\n    public content?: MultiString;\n    public more_url?: string;\n    public color?: string;\n    public pic_id?: string;\n    public pic_uri?: string;\n}","export class GuideStatus {\n    public static readonly New = \"new\";\n    public static readonly Writing = \"writing\";\n    public static readonly Translating = \"translating\";\n    public static readonly Verifying = \"verifying\";\n    public static readonly Completed = \"completed\";\n}","export class GuideType {\n    public static readonly Introduction = \"introduction\";\n    public static readonly NewRelease = \"new release\";\n}","export class MultiString {\n    [language: string]: string;\n}","export class PageData {\n    data: any[];\n    total: number;\n} ","export class PartyReference {\n    public id: string;\n    public name?: string;\n    public email?: string;\n}","import { MultiString } from './MultiString';\nimport { QuoteStatus } from './QuoteStatus';\n\nexport class Quote {\n    public id: string;\n    public text: MultiString;\n    public author: MultiString;\n    public status: string;\n    public tags: string[];\n    public all_tags: string[];\n}\n","import { IQuoteDataService } from './IQuoteDataService';\nimport { Quote } from './Quote';\nimport { PageData } from './PageData';\n\nclass QuoteData implements IQuoteDataService {\n    private RESOURCE: string = 'quotes';\n    private RESOURCE_RANDOM: string = 'quotesRandom'; \n\n    private PAGE_SIZE: number = 100;\n    private PAGE_START: number = 0;\n    private PAGE_TOTAL: boolean = true;\n\n    constructor(\n        private pipRest: pip.rest.IRestService,\n        private pipFormat: pip.services.IFormat\n    ) {\n        \"ngInject\";\n\n    }\n\n    public readQuotes(params: any, successCallback?: (data: PageData) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE).page(params, successCallback, errorCallback);\n    }\n\n    public readRandomQuote(params: any, successCallback?: (data: Quote) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE_RANDOM).get(params, successCallback, errorCallback);\n    }\n\n    public readQuote(id: string, successCallback?: (data: Quote) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource(this.RESOURCE).get(\n            { quote_id: id },\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public createQuote(data: Quote, successCallback?: (data: Quote) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).save(\n            null,\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public updateQuote(id: string, data: Quote, successCallback?: (data: Quote) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).update(\n            { quote_id: id },\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public deleteQuote(id: string, successCallback?: () => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).remove(\n            { quote_id: id },\n            null,\n            successCallback,\n            errorCallback\n        );\n    }\n\n}\n\n\nangular\n    .module('pipQuoteData', ['pipRest', 'pipServices'])\n    .service('pipQuoteData', QuoteData);\n\n","export class QuoteStatus {\n    public static readonly New = \"new\";\n    public static readonly Writing = \"writing\";\n    public static readonly Translating = \"translating\";\n    public static readonly Verifying = \"verifying\";\n    public static readonly Completed = \"completed\";\n}","import { MultiString } from './MultiString';\nimport { PartyReference } from './PartyReference';\nimport { Attachment } from './Attachment';\n\nexport class Tip {\n    public id: string;\n    public topics: string[];\n\n    /* Automatically managed fields */\n    public creator: PartyReference;\n    public create_time: Date;\n\n    /* Content */\n    public title?: MultiString;\n    public content?: MultiString;\n    public more_url?: string;\n    public pics?: Attachment[];\n    public docs?: Attachment[];\n\n    /* Search */\n    public tags?: string[];\n    public all_tags?: string[];\n\n    /* Status */\n    public status?: string;\n\n    /* Custom fields */\n    public custom_hdr?: any;\n    public custom_dat?: any;\n}","import { ITipDataService } from './ITipDataService';\nimport { Tip } from './Tip';\nimport { PageData } from './PageData';\n\nclass TipData implements ITipDataService {\n    private RESOURCE: string = 'tips';\n    private RESOURCE_RANDOM: string = 'tipsRandom'; \n\n    private PAGE_SIZE: number = 100;\n    private PAGE_START: number = 0;\n    private PAGE_TOTAL: boolean = true;\n\n    constructor(\n        private pipRest: pip.rest.IRestService,\n        private pipFormat: pip.services.IFormat\n    ) {\n        \"ngInject\";\n\n    }\n\n    public readTips(params: any, successCallback?: (data: PageData) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE).page(params, successCallback, errorCallback);\n    }\n\n    public readRandomTip(params: any, successCallback?: (data: Tip) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE_RANDOM).get(params, successCallback, errorCallback);\n    }\n\n    public readTip(id: string, successCallback?: (data: Tip) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource(this.RESOURCE).get(\n            { tip_id: id },\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public createTip(data: Tip, successCallback?: (data: Tip) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).save(\n            null,\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public updateTip(id: string, data: Tip, successCallback?: (data: Tip) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).update(\n            { tip_id: id },\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public deleteTip(id: string, successCallback?: () => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).remove(\n            { tip_id: id },\n            null,\n            successCallback,\n            errorCallback\n        );\n    }\n\n}\n\n\nangular\n    .module('pipTipData', ['pipRest', 'pipServices'])\n    .service('pipTipData', TipData);\n\n","export class TipStatus {\n    public static readonly New = \"new\";\n    public static readonly Writing = \"writing\";\n    public static readonly Translating = \"translating\";\n    public static readonly Verifying = \"verifying\";\n    public static readonly Completed = \"completed\";\n}","import './Attachment';\nimport './Guide';\nimport './GuidePage';\nimport './GuideStatus';\nimport './GuideType';\nimport './MultiString';\nimport './PartyReference';\nimport './Quote';\nimport './QuoteStatus';\nimport './PageData';\nimport './Tip';\nimport './TipStatus';\nimport './TipDataService';\nimport './ITipDataService';\nimport './QuoteDataService';\nimport './IQuoteDataService';\nimport './GuideDataService';\nimport './IGuideDataService';\n\nangular\n    .module('pipGuidance.Data', [\n        'pipTipData',\n        'pipQuoteData',\n        'pipGuideData'\n    ]);\n\nexport * from './IGuideDataService';\nexport * from './IQuoteDataService';\nexport * from './ITipDataService';\nexport * from './Attachment';\nexport * from './Guide';\nexport * from './GuidePage';\nexport * from './GuideStatus';\nexport * from './GuideType';\nexport * from './MultiString';\nexport * from './PartyReference';\nexport * from './Quote';\nexport * from './QuoteStatus';\nexport * from './PageData';\nexport * from './Tip';\nexport * from './TipStatus';","{\n\n    /**\n     * @ngdoc service\n     * @name pipGuidance.Dialog:pipGuidanceDialog\n     *\n     * @description\n     * Reproduced API to show guidance dialog stretched out on a whole screen.\n     * It is included a navigation and allows users to go back through guide.\n     */\n    class GuidanceDialog {\n        constructor(private $mdDialog: angular.material.IDialogService) {}\n        /**\n         * @ngdoc method\n         * @methodOf pipGuidance.Dialog:pipGuidanceDialog\n         * @name pipGuidance.Dialog.pipGuidanceDialog:show\n         *\n         * @description\n         * Shows guidance panel. Shown guidance can be close by click on backdrop space. Into callback function is\n         * passed nothing data.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/guidance/guidance_dialog.js#L50 View source}\n         *\n         * @param {Object} params   Options for dialog panel.\n         * @param {Function=} successCallback   Callback function is invoked on success dialog close.\n         * @param {Function=} cancelCallback    Callback function is invoked on error event.\n         */\n        public show(params, successCallback, cancelCallback) {\n            this.$mdDialog.show({\n                    targetEvent: params.event,\n                    templateUrl: 'guidance/GuidanceDialog.html',\n                    controller: GuidanceDialogController,\n                    controllerAs: '$ctrl',\n                    locals: {\n                        params: params\n                    },\n                    clickOutsideToClose: true\n                })\n                .then(() => {\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    const config = (pipTranslateProvider: pip.services.ITranslateProvider) => {\n        pipTranslateProvider.translations('en', {\n            GUIDANCE_TITLE: 'What should you do here?',\n            GUIDANCE_ACTION: 'Do it now!',\n            GUIDANCE_DO_NOT_SHOW: \"Don't show it again\"\n        });\n        pipTranslateProvider.translations('ru', {\n            GUIDANCE_TITLE: 'Что здесь делать?',\n            GUIDANCE_ACTION: 'Сделать это сейчас!',\n            GUIDANCE_DO_NOT_SHOW: 'Не показывать это снова'\n        });\n    };\n\n    class GuidanceDialogController {\n        public theme: string;\n        public title: string;\n        public imageUrl: string;\n        public imageWidth: string;\n        public imageHeight: string;\n        public action: string;\n        public content: any;\n        public hideToggle: any;\n        public showHideToggle: any;\n        \n\n        constructor(\n            $scope: ng.IScope, \n            $rootScope: ng.IRootScopeService, \n            private $mdDialog: angular.material.IDialogService, \n            private pipTranslate: pip.services.ITranslateService,\n            private params: any\n        ) {\n            this.theme = $rootScope[pip.themes.ThemeRootVar];\n            this.title = params.title || 'GUIDANCE_TITLE';\n\n            this.imageUrl = params.imageUrl || '';\n            this.imageWidth = params.imageWidth || '100%';\n            this.imageHeight = params.imageHeight || '150px';\n\n            this.content = params.content;\n            this.action = params.action || 'GUIDANCE_ACTION';\n            this.hideToggle = params.hideToggle;\n            this.showHideToggle = params.hideToggleCallback != null;\n        }\n\n        public onCancel() {\n            this.$mdDialog.cancel();\n        }\n\n        public onAction() {\n            this.$mdDialog.hide();\n        }\n\n        public onHideToggle() {\n            if (this.params.hideToggleCallback) {\n                this.params.hideToggleCallback(this.hideToggle);\n            }\n        }\n\n        public getContent(content) {\n            let language = this.pipTranslate.language || 'en';\n            return content && content[language] ? content[language] : '';\n        }\n\n    }\n\n    angular.module('pipGuidance.Dialog', ['ngMaterial', 'pipTranslate', 'pipGuidance.Templates'])\n        .config(config)\n        .service('pipGuidanceDialog', GuidanceDialog);\n\n}","﻿/// <reference path=\"../typings/tsd.d.ts\" />\n\nimport './rest';\nimport './data';\nimport './intro_guidance';\nimport './guidance/GuidanceDialog';\nimport './tips/TipsService';\nimport './quotes/QuotesService';\n\nangular.module('pipGuidance', [\n    'pipGuidance.Rest',\n    'pipTips.Service',\n    'pipIntroGuidance.Service',\n    'pipGuidance.Dialog',\n    'pipQuotes.Service',\n    'pipReleaseIntroDialog'\n]);\n\nexport * from './data';\nexport * from './tips/ITipsService';\nexport * from './quotes/IQuotesService';","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n{\n    /**\n     * @ngdoc service\n     * @name pipReleaseIntroDialog.pipReleaseIntroDialog\n     *\n     * @description\n     * Provides API to show intro dialog.\n     */\n    class ReleaseIntroDialog {\n        constructor(\n            private $mdDialog: angular.material.IDialogService\n        ) {}\n\n        /**\n         * @ngdoc method\n         * @methodOf pipReleaseIntroDialog.pipReleaseIntroDialog\n         * @name pipReleaseIntroDialog.pipReleaseIntroDialog:show\n         *\n         * @description\n         * Shows dialog panel. Shown dialog can be close by click on backdrop space. Into callback function is\n         * passed nothing data.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/intro_guidance/intro_guidance_dialog.js#L50 View source}\n         * \n         * @param {Object} params   Options for dialog panel.\n         * @param {Function=} successCallback   Callback function is invoked on success dialog close.\n         * @param {Function=} cancelCallback    Callback function is invoked on error event.\n         *\n         */\n        public show(params, successCallback, cancelCallback) {\n            this.$mdDialog.show({\n                    targetEvent: params.event,\n                    templateUrl: 'intro_guidance/IntroGuidanceDialog.html',\n                    controller: ReleaseIntroDialogController,\n                    controllerAs: '$ctrl',\n                    locals: {\n                        params: params // todo params class\n                    },\n                    clickOutsideToClose: true\n                })\n                .then(() => {\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    const config = (pipTranslateProvider: pip.services.ITranslateProvider) => {\n        pipTranslateProvider.translations('en', {\n            GUIDANCE_TITLE: 'What should you do here?',\n            GUIDANCE_ACTION: 'Do it now!',\n            GUIDANCE_DO_NOT_SHOW: \"Don't show it again\",\n            GUIDE_COMPLETE_BUTTON: 'GOT IT !'\n        });\n        pipTranslateProvider.translations('ru', {\n            GUIDANCE_TITLE: 'Что здесь делать?',\n            GUIDANCE_ACTION: 'Сделать это сейчас!',\n            GUIDANCE_DO_NOT_SHOW: 'Не показывать это снова',\n            GUIDE_COMPLETE_BUTTON: 'Закончить просмотр'\n        });\n    };\n\n    class ReleaseIntroDialogController {\n        public theme: string;\n        public number: number;\n        public ln: string;\n        public data: any;\n        public isOpen: boolean = true;\n\n        constructor(\n            private $scope: ng.IScope,\n            private $rootScope: ng.IRootScopeService,\n            private pipTranslate: pip.services.ITranslateService,\n            private $mdDialog: angular.material.IDialogService,\n            public pipMedia: pip.layouts.IMediaService,\n            private pipPictureData: pip.pictures.IPictureDataService,\n            private params: any\n        ) {\n            this.theme = $rootScope[pip.themes.ThemeRootVar];\n\n            const guide = this.params.guide;\n            this.number = 0;\n            this.ln = this.params.ln || this.pipTranslate.language || 'en';\n            this.data = guide;\n\n            _.each(this.data.pages, function (page) {\n                if (page.pic_id) {\n                    var picId = page.pic_id;\n\n                    page.picIds = [];\n                    page.picIds.push(picId);\n\n                    page.pic_id_url = pipPictureData.getPictureUrl(page.pic_id);\n                }\n                if (page.pic_uri) {\n                    var picUri = page.pic_uri;\n\n                    page.picUris = [];\n                    page.picUris.push(picUri);\n                }\n            });\n\n        }\n\n        // Process user actions\n        // --------------------\n\n        public onChangePage(newNumber) {\n            this.number = newNumber;\n            this.isOpen = false;\n        };\n\n        public onBackPage() {\n            if (this.number !== 0) {\n                this.number -= 1;\n            }\n            this.isOpen = false;\n        };\n        \n        public onNextPage() {\n            if (this.number !== this.data.pages.length - 1) {\n                this.number += 1;\n            }\n            this.isOpen = false;\n        };\n\n        public onKeyDown($event: KeyboardEvent): void {\n            if (!$event) return\n            if ($event.key == 'ArrowRight') {\n                this.onNextPage();\n            }\n            if ($event.key == 'ArrowLeft') {\n                this.onBackPage();\n            }\n            if ($event.keyCode == 32) {\n                this.onNextPage();\n            }\n            this.isOpen = false;\n        }\n\n\n        public onClose() {\n            // if intro show\n            this.$mdDialog.hide();\n        };\n    }\n\n    angular.module('pipReleaseIntroDialog')\n        .config(config)\n        .service('pipReleaseIntroDialog', ReleaseIntroDialog);\n\n}","import { IGuideDataService } from '../data';\nimport { GuideType } from '../data';\nimport { GuideStatus } from '../data';\nimport { Guide } from '../data';\nimport { IIntroGuidanceService } from './IIntroGuidanceService';\n\n{\n    /**\n     * @ngdoc service\n     * @name pipIntroGuidance.Service.pipGuidance\n     *\n     * @description\n     * Service provides an interface to show introduction guide.\n     *\n     * @requires pipReleaseIntroDialog\n     */\n\n    class IntroGuidanceService implements IIntroGuidanceService {\n        constructor(\n            private pipReleaseIntroDialog: any, \n            private pipGuideData: IGuideDataService,\n            private pipTranslate: pip.services.ITranslateService,\n            private $rootScope: ng.IRootScopeService\n        ) { }\n\n        public showReleaseGuidance(filter: string, successCallback?: () => void, errorCallback?: () => void): void {\n            this.pipGuideData.readGuides(\n                {\n                    filter: filter\n                },\n                (guides: any) => {\n                    guides = _.filter(guides.data, (guide: any) => {\n                        return guide.type = GuideType.NewRelease && guide.status === GuideStatus.Completed;\n                    });\n                    if (guides.length > 0) {\n                        this.pipReleaseIntroDialog.show({\n                            guide: guides[0],\n                            ln: this.pipTranslate.language\n                        }, successCallback, errorCallback);\n                    }\n                }, errorCallback);\n        }\n\n        public showIntroGuidance(filter: string, successCallback?: () => void, errorCallback?: () => void): void {\n            this.pipGuideData.readIntroGuides(\n                {\n                    filter: filter\n                },\n                (guides: any) => {\n                    guides = _.filter(guides.data, function (guide: any) {\n                        return guide.type = GuideType.Introduction && guide.status === GuideStatus.Completed;\n                    });\n                    if (guides.length > 0) {\n                        this.pipReleaseIntroDialog.show({\n                            guide: guides[0],\n                            ln: this.pipTranslate.language\n                        }, successCallback, errorCallback);\n                    }\n                }, errorCallback);\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipIntroGuidance.Service.pipGuidance\n         * @name pipIntroGuidance.Service.pipGuidance:showIntroReleaseGuide\n         *\n         * @description\n         * Shows introduction guide\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/intro_guidance/intro_guidance_service.js#L51 View source}\n         *\n         * @param {Object} guide    Collection with intro information\n         * @param {string} ln       Tips content language\n         *\n         * @example\n         * <pre>\n         *     pipGuidance.showIntroReleaseGuide($scope.guide, 'en');\n         * </pre>\n         */\n        public showGuide(guide: Guide, ln: string, successCallback?: () => void, errorCallback?: () => void): void {\n            if (guide) {\n                this.pipReleaseIntroDialog.show({\n                    guide: guide,\n                    ln: ln\n                }, successCallback, errorCallback);\n            }\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipIntroGuidance.Service.pipGuidance\n         * @name  pipIntroGuidance.Service.pipGuidance:findIntroReleaseGuide\n         *\n         * @description\n         * Finds guideline due to passed settings options.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/intro_guidance/intro_guidance_service.js#80 View source}\n         *\n         * @param {Object} guides   Collection of guides\n         *\n         * @return {Object} Sorted guideline. Result is dependece on 'settings.intro' field. If it is existed than it returns\n         * intro guide with 'completed' status.\n         */\n        public findIntroReleaseGuide(guides: Guide[], settings: any, appName: string): Guide {\n            let guidesSort;\n            // TODO intro and release - key constant\n            const app = appName;\n            if (!settings && !settings[app] || !settings[app].intro || !settings[app].intro.lastId) {\n                // TODO [apidhirnyi] Make chaining for filter and sortBy\n                guidesSort = _.filter(guides, (guide: Guide) => {\n                    return guide.type === GuideType.Introduction && guide.status === GuideStatus.Completed && guide.app === app;\n                });\n\n                guidesSort = _.sortBy(guidesSort, (guide: Guide) => {\n                    return -moment(guide.create_time).valueOf();\n                });\n\n                return guidesSort[0];\n            }\n\n            guidesSort = _.filter(guides, (guide: Guide) => {\n                return guide.type === GuideType.NewRelease && guide.status === GuideStatus.Completed && guide.app === app;\n            });\n\n            guidesSort = _.sortBy(guidesSort, (guide: Guide) => {\n                return -moment(guide.create_time).valueOf();\n            });\n\n            if (!settings[app].intro.create_time || (guidesSort.length > 0 &&\n                new Date(settings[app].intro.create_time) < new Date(guidesSort[0].create_time) &&\n                guidesSort[0].id != settings.release.lastId)) {\n\n                return guidesSort[0];\n            }\n\n            return null;\n        }\n\n    }\n\n    angular.module('pipIntroGuidance.Service', ['pipReleaseIntroDialog', 'pipGuideData', 'pipPictures.Data'])\n        .service('pipGuidance', IntroGuidanceService);\n}"," angular.module('pipReleaseIntroDialog', ['ngMaterial', 'pipTranslate', 'pipGuidance.Templates']);\n\n import './IntroGuidanceDialog';\n import './IntroGuidanceService';\n\n export * from './IIntroGuidanceService';","import { ITipsService } from '../tips/ITipsService';\nimport { IQuotesService } from './IQuotesService';\nimport { Quote } from '../data/Quote';\n{\n    class QuotesService implements IQuotesService {\n        private quotes: any[];\n\n        constructor(\n            private pipPopoverService: pip.controls.IPopoverService,\n            private $timeout: angular.ITimeoutService,\n            private $rootScope: angular.IRootScopeService,\n            private pipTips: ITipsService\n        ) { }\n\n        private checkStatus(item): boolean {\n            return item.status == 'completed' ? true : false;\n        }\n\n        private compareRandom(a, b): number {\n            return Math.random() - 0.5;\n        }\n\n        public filterQuotes(data: any[], topic: string): any {\n            let quotes: any[];\n            let quotesCollection: any[] = _.filter(data, this.checkStatus);\n            if (topic) {\n                quotes = [];\n                for (let index = 0; index < quotesCollection.length; index++) {\n                    const topic = _.find(quotesCollection[index].tags, function (t) {\n                        return t == topic\n                    });\n                    if (topic) {\n                        quotes.push(quotesCollection[index]);\n                    }\n                }\n            } else {\n                quotes = quotesCollection;\n            }\n\n            quotes.sort(this.compareRandom);\n\n            return quotes;\n        }\n\n        public quoteController($scope, pipMedia): void {\n            const init = () => {\n                if ($scope.locals.quotes[$scope.index].author)\n                    $scope.author = $scope.locals.quotes[$scope.index].author[$scope.locals.ln] ?\n                    $scope.locals.quotes[$scope.index].author[$scope.locals.ln] : $scope.locals.quotes[$scope.index].author['en'];\n                if ($scope.locals.quotes[$scope.index].text)\n                    $scope.content = $scope.locals.quotes[$scope.index].text[$scope.locals.ln] ? $scope.locals.quotes[$scope.index].text[$scope.locals.ln] :\n                    $scope.locals.quotes[$scope.index].text['en'];\n\n                $scope.link = $scope.locals.quotes[$scope.index].more_url;\n            }\n\n            $scope.index = 0;\n            $scope.pipMedia = pipMedia;\n\n            init();\n\n            $scope.onNextClick = function () {\n                $scope.index++;\n                if ($scope.index == $scope.locals.quotes.length)\n                    this.pipPopoverService.hide();\n                else {\n                    init();\n                    this.pipPopoverService.resize();\n                }\n\n            };\n\n            $scope.$on('pipWindowResized', init);\n        }\n\n        public showQuotes(quotes: any[], ln: string, $event? : any): void {\n            if (quotes && quotes.length > 0) {\n                this.pipPopoverService.hide();\n\n                this.pipPopoverService.show({\n                    element: $event ? $event.currentTarget : null,\n                    class: 'pip-quote',\n                    cancelCallback: () => {\n                        return false;\n                    },\n                    locals: {\n                        quotes: quotes,\n                        ln: ln || 'en'\n                    },\n                    controller: ['$scope', 'pipMedia', this.quoteController],\n                    templateUrl: 'quotes/QuoteTemplate.html'\n                });\n            }\n        }\n\n        public waitUserTipsQuotes(tips: any[], quotes: any[], ln: string): void {\n            let idleTimer = null;\n            let idleState = false;\n            let idleWait = 180000;\n\n            $(document).ready(() => {\n                $(document).bind('click keydown scroll', () => {\n                    this.$timeout.cancel(idleTimer);\n\n                    idleState = false;\n                    idleTimer = this.$timeout(() => {\n                        this.pipPopoverService.hide();\n                        if (!quotes) {\n                            this.pipTips.showTips(tips, ln);\n                        } else {\n                            if (!tips) {\n                                this.showQuotes(quotes, ln, null);\n                            } else {\n                                Math.random() < 0.5 ? this.pipTips.showTips(tips, ln) : this.showQuotes(quotes, ln, null);\n                            }\n                        }\n                        idleState = true;\n                    }, idleWait);\n                });\n\n                $(\"body\").trigger(\"click\");\n            });\n        }\n\n    }\n\n    angular.module('pipQuotes.Service', ['pipGuidance.Templates', 'pipGuidance', 'pipControls', 'pipQuoteData'])\n        .service('pipQuotes', QuotesService);\n}","// configured Rest resource\nfunction pipGuideDataConfig(pipRestProvider: pip.rest.IRestProvider) {\n    pipRestProvider.registerPagedCollection('guides', '/api/v1/guides/:guide_id');\n    pipRestProvider.registerResource('guidesRandom', '/api/v1/guides/random');\n}\n        // this.registerRoute('get', '/guides', this.getGuides);\n        // this.registerRoute('get', '/guides/random', this.getRandomGuide);\n        // this.registerRoute('get', '/guides/:guide_id', this.getGuide);\n        // this.registerRouteWithAuth('post', '/guides', this._auth.admin(), this.createGuide);\n        // this.registerRouteWithAuth('put', '/guides/:guide_id', this._auth.admin(), this.updateGuide);\n        // this.registerRouteWithAuth('del', '/guides/:guide_id', this._auth.admin(), this.deleteGuide);\nangular\n    .module('pipGuidance.Rest')\n    .config(pipGuideDataConfig);\n\n\n","function configQuoteResources(pipRestProvider: pip.rest.IRestProvider) {\n    pipRestProvider.registerPagedCollection('quotes', '/api/v1/quotes/:quote_id');\n    pipRestProvider.registerResource('quotesRandom', '/api/v1/quotes/random');\n}\n        // this.registerRoute('get', '/quotes', this.getQuotes);\n        // this.registerRoute('get', '/quotes/random', this.getRandomQuote);\n        // this.registerRoute('get', '/quotes/:quote_id', this.getQuote);\n        // this.registerRouteWithAuth('post', '/quotes', this._auth.admin(), this.createQuote);\n        // this.registerRouteWithAuth('put', '/quotes/:quote_id', this._auth.admin(), this.updateQuote);\n        // this.registerRouteWithAuth('del', '/quotes/:quote_id', this._auth.admin(), this.deleteQuote);\n\nangular\n    .module('pipGuidance.Rest')\n    .config(configQuoteResources);\n","// configured Rest resource\nfunction pipTipDataConfig(pipRestProvider: pip.rest.IRestProvider) {\n    pipRestProvider.registerPagedCollection('tips', '/api/v1/tips/:tip_id');\n    pipRestProvider.registerResource('tipsRandom', '/api/v1/tips/random');\n}\n        // this.registerRoute('get', '/tips', this.getTips);\n        // this.registerRoute('get', '/tips/random', this.getRandomTip);\n        // this.registerRoute('get', '/tips/:tip_id', this.getTip);\n        // this.registerRouteWithAuth('post', '/tips', this._auth.admin(), this.createTip);\n        // this.registerRouteWithAuth('put', '/tips/:tip_id', this._auth.admin(), this.updateTip);\n        // this.registerRouteWithAuth('del', '/tips/:tip_id', this._auth.admin(), this.deleteTip);\nangular\n    .module('pipGuidance.Rest')\n    .config(pipTipDataConfig);\n\n","\n\nangular\n    .module('pipGuidance.Rest', []);\n\nimport './TipResources';\nimport './QuoteResources';\nimport './GuideResources';","import { ITipsService } from './ITipsService';\nimport { ITipDataService } from '../data';\n\n\n{\n    /**\n     * @ngdoc service\n     * @name pipTips.Service.pipTips\n     *\n     * @description\n     * Service provides an interface to manage tips state.\n     * The service is available only on run phase.\n     */\n    class TipsService implements ITipsService {\n        private tips: any[]; // todo\n\n        constructor(\n            private $rootScope: ng.IRootScopeService,\n            private pipPopoverService: pip.controls.IPopoverService,\n            private pipTipData: ITipDataService\n            // private pipRest: pip.rest.IRestService,\n            // private pipSettingsData: any\n        ) {}\n\n        private checkStatus = (item) => {\n            return item.status === 'completed';\n        }\n\n        private compareRandom = () => {\n            return Math.random() - 0.5;\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipTips.Service.pipTips\n         * @name pipTips.Service.pipTips:filterTips\n         *\n         * @description\n         * Filters passed tips by passed topic and sorts result collection.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L63 View source}\n         *\n         * @param {Array} data  Source array of tips entities\n         * @param {string} topic    Name of topic to filter by it\n         *\n         * @returns {Array} Filtered and sorted collection.\n         *\n         * @example\n         * <pre>\n         *     pipTips.filterTips(tips, 'goals');\n         * </pre>\n         */\n        public filterTips(data: any[], topic: string) {\n            this.tips = [];\n            let tipsCollection = _.filter(data, this.checkStatus);\n\n            for (let index = 0; index < tipsCollection.length; index++) {\n                const t = _.find(tipsCollection[index].topics, (t) => {\n                    return t == topic;\n                });\n\n                if (t) {\n                    this.tips.push(tipsCollection[index]);\n                }\n            }\n\n            this.tips.sort(this.compareRandom);\n\n            return this.tips;\n        }\n\n        public tipController($scope, $timeout, pipMedia) {\n            const init = () => {\n                $scope.title = $scope.locals.tips[$scope.index].title[$scope.locals.ln];\n                $scope.content = $scope.locals.tips[$scope.index].content[$scope.locals.ln];\n                // todo grab pictures\n                // if ($scope.locals.tips[$scope.index].pic_id) {\n                //     $scope.image = this.pipRest.serverUrl + '/api/parties/' + $scope.locals.tips[$scope.index].creator_id +\n                //         '/files/' + $scope.locals.tips[$scope.index].pic_id + '/content';\n                // }\n\n                $scope.link = $scope.locals.tips[$scope.index].more_url;\n\n                if ($scope.image) {\n                    $timeout(() => {\n                        const backdropElement = $('.pip-popover-backdrop'),\n                            popover = backdropElement.find('.pip-popover');\n\n                        popover.find('.pip-pic').css('background-image', 'url(' + $scope.image + ')');\n                    }, 100);\n                }\n            }\n\n            $scope.index = 0;\n            $scope.pipMedia = pipMedia;\n\n            init();\n\n            $scope.onNextClick = () => {\n                $scope.index++;\n\n                if ($scope.index === $scope.locals.tips.length) {\n                    this.pipPopoverService.hide();\n                } else {\n                    init();\n                    this.pipPopoverService.resize();\n                }\n            };\n\n            $scope.$on('pipWindowResized', init);\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipTips.Service.pipTips\n         * @name pipTips.Service.pipTips:showTips\n         *\n         * @description\n         * Shows tip to user.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L144 View source}\n         *\n         * @param {Array} tips  Array of tips\n         * @param {string} ln   Chosen language\n         * @param {Object=} [$event=null]    Event object\n         *\n         * @example\n         * <pre>\n         *      pipTips.showTips(tips, 'en');\n         * </pre>\n         */\n        public showTips(tips: any[], ln: string, $event ? : any) {\n            if (tips && tips.length > 0) {\n                this.pipPopoverService.hide();\n                this.pipPopoverService.show({\n                    element: $event ? $event.currentTarget : null,\n                    class: 'pip-tip',\n                    cancelCallback: function () {\n                        return false;\n                    },\n                    locals: {\n                        tips: tips,\n                        ln: ln || 'en'\n                    },\n                    controller: ['$scope', '$timeout', 'pipMedia', this.tipController],\n                    templateUrl: 'tips/TipTemplate.html'\n                });\n            }\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipTips.Service.pipTips\n         * @name pipTips.Service.pipTips:firstShowTips\n         *\n         * @description\n         * Shows a tip\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L181 View source}\n         *\n         * @param {Array} tips  Collection of tips\n         * @param {string} [ln='en']   Language for tip content\n         * @param {string} topic    Name of needed topic\n         * @param {Object} settings Settings object\n         * @param {Object} [dayC=2]   Days amount throughout tips should be shown\n         */\n        public firstShowTips(tips: any[], language: string, topic: string, settings: any, dayC: number) {\n            // let ln = language || 'en',\n            //     dayCount = dayC || 2,\n            //     now = new Date(),\n            //     show;\n\n            // if (settings && settings[topic].tips) {\n            //     show = (now.getTime() - new Date(settings[topic].tips).getTime()) / (1000 * 60 * 60 * 24);\n\n            //     // TODO [apidhirnyi] Extract the same code part into the function\n            //     if (show > dayCount) {\n            //         this.pipPopoverService.hide();\n            //         this.showTips(tips, ln);\n            //         settings[topic].tips = new Date();\n            //         this.pipSettingsData.saveSettings(settings, topic);\n            //     }\n            // } else if (settings[topic]) {\n            //     this.pipPopoverService.hide();\n            //     this.showTips(tips, ln);\n            //     settings[topic].tips = new Date();\n            //     this.pipSettingsData.saveSettings(settings, topic);\n            // }\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipTips.Service.pipTips\n         * @name pipTips.Service.pipTips:getTips\n         *\n         * @description\n         * Returns tips collection according to topic.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L220 View source}\n         *\n         * @param {Object} party    User's party object\n         * @param {string} ln       Language for tip content\n         * @param {string} topic    Name of needed topic\n         * @param {Function} callback   Callback function. It gets tips collection as argument.\n         */\n        public getTips(party: any, ln: string, topic: string, callback ?: (...args) => void) {\n\n            this.pipTipData.readTips({},\n                (result) => {\n                    this.filterTips(result.data, topic);\n\n                    if (callback) {\n                        callback(this.tips);\n                    }\n\n                    return this.tips;\n                },\n                () => {\n                    return null;\n                }\n            );\n        }\n    }\n\n    angular.module('pipTips.Service', ['pipGuidance.Templates', 'pipControls', 'pipTipData'])\n        .service('pipTips', TipsService);\n}","(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('guidance/GuidanceDialog.html',\n    '<md-dialog class=\"pip-dialog pip-guidance-dialog layout-column\" width=\"768\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-header layout-row\"><h3 class=\"rm16 flex\">{{$ctrl.title | translate}}</h3><md-button class=\"pip-dialog-close\" ng-click=\"$ctrl.onCancel()\" aria-label=\"{{::\\'CLOSE\\' | translate}}\"><span class=\"icon-cross\"></span></md-button></div><div class=\"pip-body\"><div class=\"pip-content\"><pip-picture pip-src=\"$ctrl.imageUrl\" ng-hide=\"!$ctrl.imageUrl || $ctrl.imageUrl == \\'\\'\" class=\"bm16 center-block\" ng-style=\"{ width: $ctrl.imageWidth, height: $ctrl.imageHeight, display: \\'block\\' }\"></pip-picture><div class=\"bm16\" ng-bind-html=\"{{$ctrl.getContent($ctrl.content)}}\"></div><md-button class=\"md-raised md-accent w-stretch\" ng-click=\"$ctrl.onAction()\" ng-hide=\"!$ctrl.action || $ctrl.action==\\'\\'\" arial-label=\"{{$ctrl.action | translate}}\">{{::action | translate}}</md-button><md-checkbox aria-label=\"{{\\'DO_NOT_SHOW\\' | translate}}\" class=\"w-stretch m0 tm16 regular_14\" ng-model=\"$ctrl.hideToggle\" ng-change=\"$ctrl.onHideToggle()\" ng-show=\"$ctrl.showHideToggle\">{{::\\'GUIDANCE_DO_NOT_SHOW\\' | translate}}</md-checkbox></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('intro_guidance/IntroGuidanceDialog.html',\n    '<md-dialog class=\"pip-dialog pip-guidance-dialog pip-guide-preview layout-column\" md-theme=\"{{$ctrl.theme}}\" ng-keydown=\"$ctrl.onKeyDown($event)\"><div ng-if=\"!$ctrl.$routing\" ng-swipe-left=\"$ctrl.onNextPage()\" ng-swipe-right=\"$ctrl.onBackPage()\" class=\"h-stretch flex layout layout-column\" ng-style=\"{\\'background-color\\':$ctrl.data.pages[$ctrl.number].color}\"><div class=\"layout layout-row layout-align-space-between-center layout-align-xs-center-center w-stretch pip-guide-page pip-scroll-y\"><md-button ng-click=\"$ctrl.onBackPage()\" class=\"md-icon-button lm8 flex-fixed hide-xs\" aria-label=\"BACK\" ng-disabled=\"$ctrl.transaction.busy() || $ctrl.number == 0\"><md-icon md-svg-icon=\"icons:arrow-left\" class=\"pip-arrow-button\" ng-class=\"{\\'opacity-disabled\\' :$ctrl.number == 0}\"></md-icon></md-button><div style=\"visibility: hidden; position: fixed; width:0px; height: 0px;\" ng-if=\"$ctrl.isOpen\"><div ng-repeat=\"page in $ctrl.data.pages\"><img style=\"visibility: hidden; position: absolute\" ng-if=\"page.pic_uri\" src=\"{{page.pic_uri}}\" aria-hidden=\"true\" alt=\"\"> <img style=\"visibility: hidden; position: absolute\" ng-if=\"page.pic_id_url\" src=\"{{page.pic_id_url}}\" aria-hidden=\"true\" alt=\"\"></div></div><div class=\"layout layout-column layout-align-center-center bm16\"><div class=\"pip-pic\" ng-if=\"$ctrl.data.pages[$ctrl.number].pic_uri\" ng-style=\"{\\'background-image\\':\\'url(\\' + $ctrl.data.pages[$ctrl.number].pic_uri + \\')\\'}\"></div><div class=\"pip-pic\" ng-if=\"$ctrl.data.pages[$ctrl.number].pic_id_url\" ng-style=\"{\\'background-image\\':\\'url(\\' + $ctrl.data.pages[$ctrl.number].pic_id_url + \\')\\'}\"></div><div class=\"layout layout-column layout-align-center-center pip-text\"><p class=\"pip-preview-title\" ng-if=\"$ctrl.data.pages[$ctrl.number].title[$ctrl.ln]\" ng-bind-html=\"$ctrl.data.pages[$ctrl.number].title[$ctrl.ln]\"></p><p class=\"pip-preview-content\" ng-if=\"$ctrl.data.pages[$ctrl.number].content[$ctrl.ln]\" ng-bind-html=\"$ctrl.data.pages[$ctrl.number].content[$ctrl.ln]\"></p></div></div><md-button ng-click=\"$ctrl.onNextPage()\" class=\"rm8 flex-fixed hide-xs md-icon-button\" aria-label=\"DOWN\" ng-disabled=\"$ctrl.transaction.busy() || $ctrl.number == $ctrl.data.pages.length - 1\"><md-icon md-svg-icon=\"icons:arrow-right\" class=\"pip-arrow-button\" ng-class=\"{\\'opacity-disabled\\' : $ctrl.number == $ctrl.data.pages.length - 1}\"></md-icon></md-button></div><div class=\"flex-fixed flex w-stretch pip-guide-page-footer bp16\" ng-style=\"{\\'background-color\\':$ctrl.data.pages[$ctrl.number].color}\"><div class=\"layout-row layout-align-center-center\" ng-if=\"$ctrl.data.pages.length > 1\"><md-icon ng-repeat=\"radio in $ctrl.data.pages\" ng-click=\"$ctrl.onChangePage($index)\" class=\"pip-radio-button\" md-svg-icon=\"{{radio != $ctrl.data.pages[$ctrl.number] ? \\'icons:radio-off\\' : \\'icons:circle\\'}}\"></md-icon></div><div class=\"h64 layout-row layout-align-xs-space-between-center layout-align-center-center\"><md-button ng-click=\"$ctrl.onBackPage()\" class=\"lm8 flex-fixed md-icon-button\" ng-if=\"$ctrl.pipMedia(\\'xs\\')\" aria-label=\"BACK\" ng-disabled=\"$ctrl.transaction.busy() || $ctrl.number == 0\"><md-icon md-svg-icon=\"icons:arrow-left\" class=\"pip-arrow-button\" ng-class=\"{\\'opacity-disabled\\' :$ctrl.number == 0}\"></md-icon></md-button><md-button ng-click=\"$ctrl.onClose()\" ng-if=\"$ctrl.number == $ctrl.data.pages.length - 1\" class=\"pip-button-got rm8 lm8 md-raised\" ng-style=\"{ \\'color\\':$ctrl.data.pages[$ctrl.number].color }\" aria-label=\"NEXT\" ng-disabled=\"$ctrl.transaction.busy()\">{{ :: \\'GUIDE_COMPLETE_BUTTON\\' | translate }}</md-button><md-button ng-click=\"$ctrl.onClose()\" ng-if=\"$ctrl.number != $ctrl.data.pages.length - 1\" class=\"pip-button-got rm8 lm8 pip-button-got-not-raised\" ng-style=\"{ \\'background-color\\':$ctrl.data.pages[$ctrl.number].color}\" aria-label=\"NEXT\" ng-disabled=\"$ctrl.transaction.busy()\">{{ :: \\'GUIDE_COMPLETE_BUTTON\\' | translate }}</md-button><md-button ng-click=\"$ctrl.onNextPage()\" class=\"rm8 flex-fixed md-icon-button\" ng-if=\"$ctrl.pipMedia(\\'xs\\')\" aria-label=\"DOWN\" ng-disabled=\"$ctrl.transaction.busy() || $ctrl.number == $ctrl.data.pages.length - 1\"><md-icon md-svg-icon=\"icons:arrow-right\" class=\"pip-arrow-button\" ng-class=\"{\\'opacity-disabled\\' : $ctrl.number == $ctrl.data.pages.length - 1}\"></md-icon></md-button></div></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('quotes/QuoteTemplate.html',\n    '<img src=\"images/quotes.svg\" class=\"pip-bg\"><div class=\"pip-content pip-popover-content lp24-flex rp24-flex pip-scroll\"><div>{{ ::content | translate }}</div></div><div class=\"pip-footer lm24-flex rm24-flex position-bottom layout-row layout-align-start-center\"><div class=\"pip-author flex color-secondary-text\">{{ ::author | translate }}</div><md-button ng-click=\"onNextClick()\" class=\"tm0 bm0 rm0\">{{ ::\\'NEXT\\' | translate }}</md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tips/TipTemplate.html',\n    '<div ng-if=\"title\" class=\"pip-title p24-flex flex-fixed bp16\">{{ title | translate }}</div><div class=\"pip-content pip-popover-content lp24-flex rp24-flex text-body1 bm64 pip-scroll\" ng-class=\"{\\'tm24\\' : !title }\"><div ng-if=\"image && pipMedia(\\'gt-xs\\')\" class=\"pip-pic\"></div><pip-markdown pip-text=\"content\" pip-rebind=\"true\"></pip-markdown></div><div class=\"pip-footer lm24-flex rm24-flex position-bottom layout-row layout-align-start-center\"><a ng-if=\"link\" target=\"_blank\" href=\"{{ link }}\" class=\"text-body2 flex\">{{:: \\'MORE_URL\\' | translate }}</a><div ng-if=\"!link\" class=\"flex\"></div><md-button ng-click=\"onNextClick()\" class=\"rm0\">{{:: \\'NEXT\\' | translate }}</md-button></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-suite-guidance-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}