{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/data/Attachment.ts","src/data/Guide.ts","src/data/GuideDataService.ts","src/data/GuidePage.ts","src/data/GuideStatus.ts","src/data/GuideType.ts","src/data/MultiString.ts","src/data/PageData.ts","src/data/PartyReference.ts","src/data/Quote.ts","src/data/QuoteDataService.ts","src/data/QuoteStatus.ts","src/data/Tip.ts","src/data/TipDataService.ts","src/data/TipStatus.ts","src/data/index.ts","src/guidance/GuidanceDialog.ts","src/index.ts","src/intro_guidance/IntroGuidanceDialog.ts","src/intro_guidance/IntroGuidanceService.ts","src/intro_guidance/index.ts","src/quotes/QuotesService.ts","src/rest/GuideResources.ts","src/rest/QuoteResources.ts","src/rest/TipResources.ts","src/rest/index.ts","src/tips/TipsService.ts","temp/pip-suite-guidance-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","guidance","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","Attachment","Guide","GuideType_1","GuideStatus_1","GuideData","$inject","prototype","readGuides","params","successCallback","errorCallback","filter","filer","pipFormat","filterToString","pipRest","getResource","RESOURCE","page","readRandomGuide","RESOURCE_RANDOM","get","readIntroGuides","type","GuideType","Introduction","status","GuideStatus","Completed","readGuide","id","guide_id","createGuide","data","save","updateGuide","update","deleteGuide","remove","PAGE_SIZE","PAGE_START","PAGE_TOTAL","Object","defineProperty","value","GuidePage","New","Writing","Translating","Verifying","NewRelease","MultiString","PageData","PartyReference","Quote","QuoteData","readQuotes","readRandomQuote","readQuote","quote_id","createQuote","updateQuote","deleteQuote","QuoteStatus","Tip","readTips","readRandomTip","TipData","readTip","tip_id","createTip","updateTip","deleteTip","18","TipStatus","m","hasOwnProperty","__export","./Guide","./GuideDataService","./GuidePage","./GuideStatus","./GuideType","./IGuideDataService","./IQuoteDataService","./ITipDataService","./MultiString","./PageData","./PartyReference","./Quote","./QuoteDataService","./QuoteStatus","./Tip","./TipDataService","./TipStatus","20","pipTranslateProvider","translations","GUIDANCE_TITLE","GUIDANCE_ACTION","GUIDANCE_DO_NOT_SHOW","GuidanceDialog","show","cancelCallback","$mdDialog","targetEvent","event","GuidanceDialogController_1","controllerAs","locals","then","onCancel","cancel","onAction","hide","onHideToggle","hideToggleCallback","hideToggle","getContent","content","language","pipTranslate","$scope","$rootScope","theme","themes","ThemeRootVar","title","imageUrl","imageWidth","imageHeight","action","showHideToggle","./guidance/GuidanceDialog","./intro_guidance","./quotes/QuotesService","./rest","./tips/TipsService","22","GUIDE_COMPLETE_BUTTON","templateUrl","controller","ReleaseIntroDialogController_1","clickOutsideToClose","ReleaseIntroDialog","onChangePage","newNumber","number","isOpen","onBackPage","onNextPage","pages","onKeyDown","$event","key","keyCode","onClose","pipMedia","pipPictureData","guide","ln","pic_id","picId","picIds","push","pic_id_url","getPictureUrl","pic_uri","picUri","picUris","angular","config","service","IntroGuidanceService","showReleaseGuidance","guides","_","data_1","data_2","_this","pipReleaseIntroDialog","showIntroGuidance","showGuide","findIntroReleaseGuide","settings","appName","guidesSort","app","intro","lastId","sortBy","moment","create_time","valueOf","Date","release","pipGuideData","./IntroGuidanceService","25","QuotesService","checkStatus","item","compareRandom","b","random","filterQuotes","topic","quotes","index","topic_1","find","quotesCollection","tags","_loop_1","quoteController","init","author","text","link","more_url","onNextClick","pipPopoverService","resize","showQuotes","element","currentTarget","class","waitUserTipsQuotes","tips","ready","bind","idleTimer","$timeout","Math","pipTips","showTips","$","trigger","26","pipGuideDataConfig","pipRestProvider","registerPagedCollection","registerResource","27","configQuoteResources","28","pipTipDataConfig","29","./QuoteResources","./TipResources","30","TipsService","filterTips","tipsCollection","topics","sort","tipController","image","css","firstShowTips","dayC","getTips","party","callback","pipTipData","result","31","run","$templateCache","put"],"mappings":"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","file":"pip-suite-guidance.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export class Attachment {\n    public id?: string;\n    public uri?: string;\n    public name?: string;\n} ","import { GuidePage } from './GuidePage';\n\n\nexport class Guide {\n\n    /* Identification */\n    public id: string;\n    public name?: string;\n    public type: string;\n    public app?: string;\n    public min_ver?: number;\n    public max_ver?: number;\n\n    /* Automatically managed fields */\n    public create_time: Date;\n\n    /* Content */\n    public pages: GuidePage[];\n\n    /* Search */\n    public tags?: string[];\n    public all_tags?: string[];\n\n    /* Status */\n    public status?: string;\n\n    /* Custom fields */\n    public custom_hdr?: any;\n    public custom_dat?: any;\n}\n","import { IGuideDataService } from './IGuideDataService';\nimport { Guide } from './Guide';\nimport { GuideType } from './GuideType';\nimport { GuideStatus } from './GuideStatus';\nimport { PageData } from './PageData';\n\nclass GuideData implements IGuideDataService {\n    private RESOURCE: string = 'guides';\n    private RESOURCE_RANDOM: string = 'guidesRandom'; \n\n    private PAGE_SIZE: number = 100;\n    private PAGE_START: number = 0;\n    private PAGE_TOTAL: boolean = true;\n\n    constructor(\n        private pipRest: pip.rest.IRestService,\n        private pipFormat: pip.services.IFormat\n    ) {\n        \"ngInject\";\n\n    }\n\n    public readGuides(params: any, successCallback?: (data: PageData) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE).page(params, successCallback, errorCallback);\n    }\n\n    public readRandomGuide(params: any, successCallback?: (data: Guide) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE_RANDOM).get(params, successCallback, errorCallback);\n    }\n\n    public readIntroGuides(params: any, successCallback?: (data: PageData) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        let filter = params.filter || {};\n        filter.type = GuideType.Introduction;\n        filter.status = GuideStatus.Completed; \n        params.filer = this.pipFormat.filterToString(filter);\n\n        return this.pipRest.getResource(this.RESOURCE).page(\n            params,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public readGuide(id: string, successCallback?: (data: Guide) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource(this.RESOURCE).get(\n            { guide_id: id },\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public createGuide(data: Guide, successCallback?: (data: Guide) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).save(\n            null,\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public updateGuide(id: string, data: Guide, successCallback?: (data: Guide) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).update(\n            { guide_id: id },\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public deleteGuide(id: string, successCallback?: () => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).remove(\n            { guide_id: id },\n            null,\n            successCallback,\n            errorCallback\n        );\n    }\n}\n\n\nangular\n    .module('pipGuideData', ['pipRest', 'pipServices'])\n    .service('pipGuideData', GuideData);\n\n\n","import { MultiString } from './MultiString';\n\nexport class GuidePage {\n    public title: MultiString;\n    public content?: MultiString;\n    public more_url?: string;\n    public color?: string;\n    public pic_id?: string;\n    public pic_uri?: string;\n}","export class GuideStatus {\n    public static readonly New = \"new\";\n    public static readonly Writing = \"writing\";\n    public static readonly Translating = \"translating\";\n    public static readonly Verifying = \"verifying\";\n    public static readonly Completed = \"completed\";\n}","export class GuideType {\n    public static readonly Introduction = \"introduction\";\n    public static readonly NewRelease = \"new release\";\n}","export class MultiString {\n    [language: string]: string;\n}","export class PageData {\n    data: any[];\n    total: number;\n} ","export class PartyReference {\n    public id: string;\n    public name?: string;\n    public email?: string;\n}","import { MultiString } from './MultiString';\nimport { QuoteStatus } from './QuoteStatus';\n\nexport class Quote {\n    public id: string;\n    public text: MultiString;\n    public author: MultiString;\n    public status: string;\n    public tags: string[];\n    public all_tags: string[];\n}\n","import { IQuoteDataService } from './IQuoteDataService';\nimport { Quote } from './Quote';\nimport { PageData } from './PageData';\n\nclass QuoteData implements IQuoteDataService {\n    private RESOURCE: string = 'quotes';\n    private RESOURCE_RANDOM: string = 'quotesRandom'; \n\n    private PAGE_SIZE: number = 100;\n    private PAGE_START: number = 0;\n    private PAGE_TOTAL: boolean = true;\n\n    constructor(\n        private pipRest: pip.rest.IRestService,\n        private pipFormat: pip.services.IFormat\n    ) {\n        \"ngInject\";\n\n    }\n\n    public readQuotes(params: any, successCallback?: (data: PageData) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE).page(params, successCallback, errorCallback);\n    }\n\n    public readRandomQuote(params: any, successCallback?: (data: Quote) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE_RANDOM).get(params, successCallback, errorCallback);\n    }\n\n    public readQuote(id: string, successCallback?: (data: Quote) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource(this.RESOURCE).get(\n            { quote_id: id },\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public createQuote(data: Quote, successCallback?: (data: Quote) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).save(\n            null,\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public updateQuote(id: string, data: Quote, successCallback?: (data: Quote) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).update(\n            { quote_id: id },\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public deleteQuote(id: string, successCallback?: () => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).remove(\n            { quote_id: id },\n            null,\n            successCallback,\n            errorCallback\n        );\n    }\n\n}\n\n\nangular\n    .module('pipQuoteData', ['pipRest', 'pipServices'])\n    .service('pipQuoteData', QuoteData);\n\n","export class QuoteStatus {\n    public static readonly New = \"new\";\n    public static readonly Writing = \"writing\";\n    public static readonly Translating = \"translating\";\n    public static readonly Verifying = \"verifying\";\n    public static readonly Completed = \"completed\";\n}","import { MultiString } from './MultiString';\nimport { PartyReference } from './PartyReference';\nimport { Attachment } from './Attachment';\n\nexport class Tip {\n    public id: string;\n    public topics: string[];\n\n    /* Automatically managed fields */\n    public creator: PartyReference;\n    public create_time: Date;\n\n    /* Content */\n    public title?: MultiString;\n    public content?: MultiString;\n    public more_url?: string;\n    public pics?: Attachment[];\n    public docs?: Attachment[];\n\n    /* Search */\n    public tags?: string[];\n    public all_tags?: string[];\n\n    /* Status */\n    public status?: string;\n\n    /* Custom fields */\n    public custom_hdr?: any;\n    public custom_dat?: any;\n}","import { ITipDataService } from './ITipDataService';\nimport { Tip } from './Tip';\nimport { PageData } from './PageData';\n\nclass TipData implements ITipDataService {\n    private RESOURCE: string = 'tips';\n    private RESOURCE_RANDOM: string = 'tipsRandom'; \n\n    private PAGE_SIZE: number = 100;\n    private PAGE_START: number = 0;\n    private PAGE_TOTAL: boolean = true;\n\n    constructor(\n        private pipRest: pip.rest.IRestService,\n        private pipFormat: pip.services.IFormat\n    ) {\n        \"ngInject\";\n\n    }\n\n    public readTips(params: any, successCallback?: (data: PageData) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE).page(params, successCallback, errorCallback);\n    }\n\n    public readRandomTip(params: any, successCallback?: (data: Tip) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        if (params.filter) {\n            params.filer = this.pipFormat.filterToString(params.filer);\n        }\n\n        return this.pipRest.getResource(this.RESOURCE_RANDOM).get(params, successCallback, errorCallback);\n    }\n\n    public readTip(id: string, successCallback?: (data: Tip) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource(this.RESOURCE).get(\n            { tip_id: id },\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public createTip(data: Tip, successCallback?: (data: Tip) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).save(\n            null,\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public updateTip(id: string, data: Tip, successCallback?: (data: Tip) => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).update(\n            { tip_id: id },\n            data,\n            successCallback,\n            errorCallback\n        );\n    }\n\n    public deleteTip(id: string, successCallback?: () => void, errorCallback?: (error: any) => void): void {\n        this.pipRest.getResource(this.RESOURCE).remove(\n            { tip_id: id },\n            null,\n            successCallback,\n            errorCallback\n        );\n    }\n\n}\n\n\nangular\n    .module('pipTipData', ['pipRest', 'pipServices'])\n    .service('pipTipData', TipData);\n\n","export class TipStatus {\n    public static readonly New = \"new\";\n    public static readonly Writing = \"writing\";\n    public static readonly Translating = \"translating\";\n    public static readonly Verifying = \"verifying\";\n    public static readonly Completed = \"completed\";\n}","import './Attachment';\nimport './Guide';\nimport './GuidePage';\nimport './GuideStatus';\nimport './GuideType';\nimport './MultiString';\nimport './PartyReference';\nimport './Quote';\nimport './QuoteStatus';\nimport './PageData';\nimport './Tip';\nimport './TipStatus';\nimport './TipDataService';\nimport './ITipDataService';\nimport './QuoteDataService';\nimport './IQuoteDataService';\nimport './GuideDataService';\nimport './IGuideDataService';\n\nangular\n    .module('pipGuidance.Data', [\n        'pipTipData',\n        'pipQuoteData',\n        'pipGuideData'\n    ]);\n\nexport * from './IGuideDataService';\nexport * from './IQuoteDataService';\nexport * from './ITipDataService';\nexport * from './Attachment';\nexport * from './Guide';\nexport * from './GuidePage';\nexport * from './GuideStatus';\nexport * from './GuideType';\nexport * from './MultiString';\nexport * from './PartyReference';\nexport * from './Quote';\nexport * from './QuoteStatus';\nexport * from './PageData';\nexport * from './Tip';\nexport * from './TipStatus';","{\n\n    /**\n     * @ngdoc service\n     * @name pipGuidance.Dialog:pipGuidanceDialog\n     *\n     * @description\n     * Reproduced API to show guidance dialog stretched out on a whole screen.\n     * It is included a navigation and allows users to go back through guide.\n     */\n    class GuidanceDialog {\n        constructor(private $mdDialog: angular.material.IDialogService) {}\n        /**\n         * @ngdoc method\n         * @methodOf pipGuidance.Dialog:pipGuidanceDialog\n         * @name pipGuidance.Dialog.pipGuidanceDialog:show\n         *\n         * @description\n         * Shows guidance panel. Shown guidance can be close by click on backdrop space. Into callback function is\n         * passed nothing data.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/guidance/guidance_dialog.js#L50 View source}\n         *\n         * @param {Object} params   Options for dialog panel.\n         * @param {Function=} successCallback   Callback function is invoked on success dialog close.\n         * @param {Function=} cancelCallback    Callback function is invoked on error event.\n         */\n        public show(params, successCallback, cancelCallback) {\n            this.$mdDialog.show({\n                    targetEvent: params.event,\n                    templateUrl: 'guidance/GuidanceDialog.html',\n                    controller: GuidanceDialogController,\n                    controllerAs: '$ctrl',\n                    locals: {\n                        params: params\n                    },\n                    clickOutsideToClose: true\n                })\n                .then(() => {\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    const config = (pipTranslateProvider: pip.services.ITranslateProvider) => {\n        pipTranslateProvider.translations('en', {\n            GUIDANCE_TITLE: 'What should you do here?',\n            GUIDANCE_ACTION: 'Do it now!',\n            GUIDANCE_DO_NOT_SHOW: \"Don't show it again\"\n        });\n        pipTranslateProvider.translations('ru', {\n            GUIDANCE_TITLE: 'Что здесь делать?',\n            GUIDANCE_ACTION: 'Сделать это сейчас!',\n            GUIDANCE_DO_NOT_SHOW: 'Не показывать это снова'\n        });\n    };\n\n    class GuidanceDialogController {\n        public theme: string;\n        public title: string;\n        public imageUrl: string;\n        public imageWidth: string;\n        public imageHeight: string;\n        public action: string;\n        public content: any;\n        public hideToggle: any;\n        public showHideToggle: any;\n        \n\n        constructor(\n            $scope: ng.IScope, \n            $rootScope: ng.IRootScopeService, \n            private $mdDialog: angular.material.IDialogService, \n            private pipTranslate: pip.services.ITranslateService,\n            private params: any\n        ) {\n            this.theme = $rootScope[pip.themes.ThemeRootVar];\n            this.title = params.title || 'GUIDANCE_TITLE';\n\n            this.imageUrl = params.imageUrl || '';\n            this.imageWidth = params.imageWidth || '100%';\n            this.imageHeight = params.imageHeight || '150px';\n\n            this.content = params.content;\n            this.action = params.action || 'GUIDANCE_ACTION';\n            this.hideToggle = params.hideToggle;\n            this.showHideToggle = params.hideToggleCallback != null;\n        }\n\n        public onCancel() {\n            this.$mdDialog.cancel();\n        }\n\n        public onAction() {\n            this.$mdDialog.hide();\n        }\n\n        public onHideToggle() {\n            if (this.params.hideToggleCallback) {\n                this.params.hideToggleCallback(this.hideToggle);\n            }\n        }\n\n        public getContent(content) {\n            let language = this.pipTranslate.language || 'en';\n            return content && content[language] ? content[language] : '';\n        }\n\n    }\n\n    angular.module('pipGuidance.Dialog', ['ngMaterial', 'pipTranslate', 'pipGuidance.Templates'])\n        .config(config)\n        .service('pipGuidanceDialog', GuidanceDialog);\n\n}","﻿/// <reference path=\"../typings/tsd.d.ts\" />\n\nimport './rest';\nimport './data';\nimport './intro_guidance';\nimport './guidance/GuidanceDialog';\nimport './tips/TipsService';\nimport './quotes/QuotesService';\n\nangular.module('pipGuidance', [\n    'pipGuidance.Rest',\n    'pipTips.Service',\n    'pipIntroGuidance.Service',\n    'pipGuidance.Dialog',\n    'pipQuotes.Service',\n    'pipReleaseIntroDialog'\n]);\n\nexport * from './data';\nexport * from './tips/ITipsService';\nexport * from './quotes/IQuotesService';","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n{\n    /**\n     * @ngdoc service\n     * @name pipReleaseIntroDialog.pipReleaseIntroDialog\n     *\n     * @description\n     * Provides API to show intro dialog.\n     */\n    class ReleaseIntroDialog {\n        constructor(\n            private $mdDialog: angular.material.IDialogService\n        ) {}\n\n        /**\n         * @ngdoc method\n         * @methodOf pipReleaseIntroDialog.pipReleaseIntroDialog\n         * @name pipReleaseIntroDialog.pipReleaseIntroDialog:show\n         *\n         * @description\n         * Shows dialog panel. Shown dialog can be close by click on backdrop space. Into callback function is\n         * passed nothing data.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/intro_guidance/intro_guidance_dialog.js#L50 View source}\n         * \n         * @param {Object} params   Options for dialog panel.\n         * @param {Function=} successCallback   Callback function is invoked on success dialog close.\n         * @param {Function=} cancelCallback    Callback function is invoked on error event.\n         *\n         */\n        public show(params, successCallback, cancelCallback) {\n            this.$mdDialog.show({\n                    targetEvent: params.event,\n                    templateUrl: 'intro_guidance/IntroGuidanceDialog.html',\n                    controller: ReleaseIntroDialogController,\n                    controllerAs: '$ctrl',\n                    locals: {\n                        params: params // todo params class\n                    },\n                    clickOutsideToClose: true\n                })\n                .then(() => {\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    const config = (pipTranslateProvider: pip.services.ITranslateProvider) => {\n        pipTranslateProvider.translations('en', {\n            GUIDANCE_TITLE: 'What should you do here?',\n            GUIDANCE_ACTION: 'Do it now!',\n            GUIDANCE_DO_NOT_SHOW: \"Don't show it again\",\n            GUIDE_COMPLETE_BUTTON: 'GOT IT !'\n        });\n        pipTranslateProvider.translations('ru', {\n            GUIDANCE_TITLE: 'Что здесь делать?',\n            GUIDANCE_ACTION: 'Сделать это сейчас!',\n            GUIDANCE_DO_NOT_SHOW: 'Не показывать это снова',\n            GUIDE_COMPLETE_BUTTON: 'Закончить просмотр'\n        });\n    };\n\n    class ReleaseIntroDialogController {\n        public theme: string;\n        public number: number;\n        public ln: string;\n        public data: any;\n        public isOpen: boolean = true;\n\n        constructor(\n            private $scope: ng.IScope,\n            private $rootScope: ng.IRootScopeService,\n            private pipTranslate: pip.services.ITranslateService,\n            private $mdDialog: angular.material.IDialogService,\n            public pipMedia: pip.layouts.IMediaService,\n            private pipPictureData: pip.pictures.IPictureDataService,\n            private params: any\n        ) {\n            this.theme = $rootScope[pip.themes.ThemeRootVar];\n\n            const guide = this.params.guide;\n            this.number = 0;\n            this.ln = this.params.ln || this.pipTranslate.language || 'en';\n            this.data = guide;\n\n            _.each(this.data.pages, function (page) {\n                if (page.pic_id) {\n                    var picId = page.pic_id;\n\n                    page.picIds = [];\n                    page.picIds.push(picId);\n\n                    page.pic_id_url = pipPictureData.getPictureUrl(page.pic_id);\n                }\n                if (page.pic_uri) {\n                    var picUri = page.pic_uri;\n\n                    page.picUris = [];\n                    page.picUris.push(picUri);\n                }\n            });\n\n        }\n\n        // Process user actions\n        // --------------------\n\n        public onChangePage(newNumber) {\n            this.number = newNumber;\n            this.isOpen = false;\n        };\n\n        public onBackPage() {\n            if (this.number !== 0) {\n                this.number -= 1;\n            }\n            this.isOpen = false;\n        };\n        \n        public onNextPage() {\n            if (this.number !== this.data.pages.length - 1) {\n                this.number += 1;\n            }\n            this.isOpen = false;\n        };\n\n        public onKeyDown($event: KeyboardEvent): void {\n            if (!$event) return\n            if ($event.key == 'ArrowRight') {\n                this.onNextPage();\n            }\n            if ($event.key == 'ArrowLeft') {\n                this.onBackPage();\n            }\n            if ($event.keyCode == 32) {\n                this.onNextPage();\n            }\n            this.isOpen = false;\n        }\n\n\n        public onClose() {\n            // if intro show\n            this.$mdDialog.hide();\n        };\n    }\n\n    angular.module('pipReleaseIntroDialog')\n        .config(config)\n        .service('pipReleaseIntroDialog', ReleaseIntroDialog);\n\n}","import { IGuideDataService } from '../data';\nimport { GuideType } from '../data';\nimport { GuideStatus } from '../data';\nimport { Guide } from '../data';\nimport { IIntroGuidanceService } from './IIntroGuidanceService';\n\n{\n    /**\n     * @ngdoc service\n     * @name pipIntroGuidance.Service.pipGuidance\n     *\n     * @description\n     * Service provides an interface to show introduction guide.\n     *\n     * @requires pipReleaseIntroDialog\n     */\n\n    class IntroGuidanceService implements IIntroGuidanceService {\n        constructor(\n            private pipReleaseIntroDialog: any, \n            private pipGuideData: IGuideDataService,\n            private pipTranslate: pip.services.ITranslateService,\n            private $rootScope: ng.IRootScopeService\n        ) { }\n\n        public showReleaseGuidance(filter: string, successCallback?: () => void, errorCallback?: () => void): void {\n            this.pipGuideData.readGuides(\n                {\n                    filter: filter\n                },\n                (guides: any) => {\n                    guides = _.filter(guides.data, (guide: any) => {\n                        return guide.type = GuideType.NewRelease && guide.status === GuideStatus.Completed;\n                    });\n                    if (guides.length > 0) {\n                        this.pipReleaseIntroDialog.show({\n                            guide: guides[0],\n                            ln: this.pipTranslate.language\n                        }, successCallback, errorCallback);\n                    }\n                }, errorCallback);\n        }\n\n        public showIntroGuidance(filter: string, successCallback?: () => void, errorCallback?: () => void): void {\n            this.pipGuideData.readIntroGuides(\n                {\n                    filter: filter\n                },\n                (guides: any) => {\n                    guides = _.filter(guides.data, function (guide: any) {\n                        return guide.type = GuideType.Introduction && guide.status === GuideStatus.Completed;\n                    });\n                    if (guides.length > 0) {\n                        this.pipReleaseIntroDialog.show({\n                            guide: guides[0],\n                            ln: this.pipTranslate.language\n                        }, successCallback, errorCallback);\n                    }\n                }, errorCallback);\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipIntroGuidance.Service.pipGuidance\n         * @name pipIntroGuidance.Service.pipGuidance:showIntroReleaseGuide\n         *\n         * @description\n         * Shows introduction guide\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/intro_guidance/intro_guidance_service.js#L51 View source}\n         *\n         * @param {Object} guide    Collection with intro information\n         * @param {string} ln       Tips content language\n         *\n         * @example\n         * <pre>\n         *     pipGuidance.showIntroReleaseGuide($scope.guide, 'en');\n         * </pre>\n         */\n        public showGuide(guide: Guide, ln: string, successCallback?: () => void, errorCallback?: () => void): void {\n            if (guide) {\n                this.pipReleaseIntroDialog.show({\n                    guide: guide,\n                    ln: ln\n                }, successCallback, errorCallback);\n            }\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipIntroGuidance.Service.pipGuidance\n         * @name  pipIntroGuidance.Service.pipGuidance:findIntroReleaseGuide\n         *\n         * @description\n         * Finds guideline due to passed settings options.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/intro_guidance/intro_guidance_service.js#80 View source}\n         *\n         * @param {Object} guides   Collection of guides\n         *\n         * @return {Object} Sorted guideline. Result is dependece on 'settings.intro' field. If it is existed than it returns\n         * intro guide with 'completed' status.\n         */\n        public findIntroReleaseGuide(guides: Guide[], settings: any, appName: string): Guide {\n            let guidesSort;\n            // TODO intro and release - key constant\n            const app = appName;\n            if (!settings && !settings[app] || !settings[app].intro || !settings[app].intro.lastId) {\n                // TODO [apidhirnyi] Make chaining for filter and sortBy\n                guidesSort = _.filter(guides, (guide: Guide) => {\n                    return guide.type === GuideType.Introduction && guide.status === GuideStatus.Completed && guide.app === app;\n                });\n\n                guidesSort = _.sortBy(guidesSort, (guide: Guide) => {\n                    return -moment(guide.create_time).valueOf();\n                });\n\n                return guidesSort[0];\n            }\n\n            guidesSort = _.filter(guides, (guide: Guide) => {\n                return guide.type === GuideType.NewRelease && guide.status === GuideStatus.Completed && guide.app === app;\n            });\n\n            guidesSort = _.sortBy(guidesSort, (guide: Guide) => {\n                return -moment(guide.create_time).valueOf();\n            });\n\n            if (!settings[app].intro.create_time || (guidesSort.length > 0 &&\n                new Date(settings[app].intro.create_time) < new Date(guidesSort[0].create_time) &&\n                guidesSort[0].id != settings.release.lastId)) {\n\n                return guidesSort[0];\n            }\n\n            return null;\n        }\n\n    }\n\n    angular.module('pipIntroGuidance.Service', ['pipReleaseIntroDialog', 'pipGuideData', 'pipPictures.Data'])\n        .service('pipGuidance', IntroGuidanceService);\n}"," angular.module('pipReleaseIntroDialog', ['ngMaterial', 'pipTranslate', 'pipGuidance.Templates']);\n\n import './IntroGuidanceDialog';\n import './IntroGuidanceService';\n\n export * from './IIntroGuidanceService';","import { ITipsService } from '../tips/ITipsService';\nimport { IQuotesService } from './IQuotesService';\nimport { Quote } from '../data/Quote';\n{\n    class QuotesService implements IQuotesService {\n        private quotes: any[];\n\n        constructor(\n            private pipPopoverService: pip.controls.IPopoverService,\n            private $timeout: angular.ITimeoutService,\n            private $rootScope: angular.IRootScopeService,\n            private pipTips: ITipsService\n        ) { }\n\n        private checkStatus(item): boolean {\n            return item.status == 'completed' ? true : false;\n        }\n\n        private compareRandom(a, b): number {\n            return Math.random() - 0.5;\n        }\n\n        public filterQuotes(data: any[], topic: string): any {\n            let quotes: any[];\n            let quotesCollection: any[] = _.filter(data, this.checkStatus);\n            if (topic) {\n                quotes = [];\n                for (let index = 0; index < quotesCollection.length; index++) {\n                    const topic = _.find(quotesCollection[index].tags, function (t) {\n                        return t == topic\n                    });\n                    if (topic) {\n                        quotes.push(quotesCollection[index]);\n                    }\n                }\n            } else {\n                quotes = quotesCollection;\n            }\n\n            quotes.sort(this.compareRandom);\n\n            return quotes;\n        }\n\n        public quoteController($scope, pipMedia): void {\n            const init = () => {\n                if ($scope.locals.quotes[$scope.index].author)\n                    $scope.author = $scope.locals.quotes[$scope.index].author[$scope.locals.ln] ?\n                    $scope.locals.quotes[$scope.index].author[$scope.locals.ln] : $scope.locals.quotes[$scope.index].author['en'];\n                if ($scope.locals.quotes[$scope.index].text)\n                    $scope.content = $scope.locals.quotes[$scope.index].text[$scope.locals.ln] ? $scope.locals.quotes[$scope.index].text[$scope.locals.ln] :\n                    $scope.locals.quotes[$scope.index].text['en'];\n\n                $scope.link = $scope.locals.quotes[$scope.index].more_url;\n            }\n\n            $scope.index = 0;\n            $scope.pipMedia = pipMedia;\n\n            init();\n\n            $scope.onNextClick = function () {\n                $scope.index++;\n                if ($scope.index == $scope.locals.quotes.length)\n                    this.pipPopoverService.hide();\n                else {\n                    init();\n                    this.pipPopoverService.resize();\n                }\n\n            };\n\n            $scope.$on('pipWindowResized', init);\n        }\n\n        public showQuotes(quotes: any[], ln: string, $event? : any): void {\n            if (quotes && quotes.length > 0) {\n                this.pipPopoverService.hide();\n\n                this.pipPopoverService.show({\n                    element: $event ? $event.currentTarget : null,\n                    class: 'pip-quote',\n                    cancelCallback: () => {\n                        return false;\n                    },\n                    locals: {\n                        quotes: quotes,\n                        ln: ln || 'en'\n                    },\n                    controller: ['$scope', 'pipMedia', this.quoteController],\n                    templateUrl: 'quotes/QuoteTemplate.html'\n                });\n            }\n        }\n\n        public waitUserTipsQuotes(tips: any[], quotes: any[], ln: string): void {\n            let idleTimer = null;\n            let idleState = false;\n            let idleWait = 180000;\n\n            $(document).ready(() => {\n                $(document).bind('click keydown scroll', () => {\n                    this.$timeout.cancel(idleTimer);\n\n                    idleState = false;\n                    idleTimer = this.$timeout(() => {\n                        this.pipPopoverService.hide();\n                        if (!quotes) {\n                            this.pipTips.showTips(tips, ln);\n                        } else {\n                            if (!tips) {\n                                this.showQuotes(quotes, ln, null);\n                            } else {\n                                Math.random() < 0.5 ? this.pipTips.showTips(tips, ln) : this.showQuotes(quotes, ln, null);\n                            }\n                        }\n                        idleState = true;\n                    }, idleWait);\n                });\n\n                $(\"body\").trigger(\"click\");\n            });\n        }\n\n    }\n\n    angular.module('pipQuotes.Service', ['pipGuidance.Templates', 'pipGuidance', 'pipControls', 'pipQuoteData'])\n        .service('pipQuotes', QuotesService);\n}","// configured Rest resource\nfunction pipGuideDataConfig(pipRestProvider: pip.rest.IRestProvider) {\n    pipRestProvider.registerPagedCollection('guides', '/api/v1/guides/:guide_id');\n    pipRestProvider.registerResource('guidesRandom', '/api/v1/guides/random');\n}\n        // this.registerRoute('get', '/guides', this.getGuides);\n        // this.registerRoute('get', '/guides/random', this.getRandomGuide);\n        // this.registerRoute('get', '/guides/:guide_id', this.getGuide);\n        // this.registerRouteWithAuth('post', '/guides', this._auth.admin(), this.createGuide);\n        // this.registerRouteWithAuth('put', '/guides/:guide_id', this._auth.admin(), this.updateGuide);\n        // this.registerRouteWithAuth('del', '/guides/:guide_id', this._auth.admin(), this.deleteGuide);\nangular\n    .module('pipGuidance.Rest')\n    .config(pipGuideDataConfig);\n\n\n","function configQuoteResources(pipRestProvider: pip.rest.IRestProvider) {\n    pipRestProvider.registerPagedCollection('quotes', '/api/v1/quotes/:quote_id');\n    pipRestProvider.registerResource('quotesRandom', '/api/v1/quotes/random');\n}\n        // this.registerRoute('get', '/quotes', this.getQuotes);\n        // this.registerRoute('get', '/quotes/random', this.getRandomQuote);\n        // this.registerRoute('get', '/quotes/:quote_id', this.getQuote);\n        // this.registerRouteWithAuth('post', '/quotes', this._auth.admin(), this.createQuote);\n        // this.registerRouteWithAuth('put', '/quotes/:quote_id', this._auth.admin(), this.updateQuote);\n        // this.registerRouteWithAuth('del', '/quotes/:quote_id', this._auth.admin(), this.deleteQuote);\n\nangular\n    .module('pipGuidance.Rest')\n    .config(configQuoteResources);\n","// configured Rest resource\nfunction pipTipDataConfig(pipRestProvider: pip.rest.IRestProvider) {\n    pipRestProvider.registerPagedCollection('tips', '/api/v1/tips/:tip_id');\n    pipRestProvider.registerResource('tipsRandom', '/api/v1/tips/random');\n}\n        // this.registerRoute('get', '/tips', this.getTips);\n        // this.registerRoute('get', '/tips/random', this.getRandomTip);\n        // this.registerRoute('get', '/tips/:tip_id', this.getTip);\n        // this.registerRouteWithAuth('post', '/tips', this._auth.admin(), this.createTip);\n        // this.registerRouteWithAuth('put', '/tips/:tip_id', this._auth.admin(), this.updateTip);\n        // this.registerRouteWithAuth('del', '/tips/:tip_id', this._auth.admin(), this.deleteTip);\nangular\n    .module('pipGuidance.Rest')\n    .config(pipTipDataConfig);\n\n","\n\nangular\n    .module('pipGuidance.Rest', []);\n\nimport './TipResources';\nimport './QuoteResources';\nimport './GuideResources';","import { ITipsService } from './ITipsService';\nimport { ITipDataService } from '../data';\n\n\n{\n    /**\n     * @ngdoc service\n     * @name pipTips.Service.pipTips\n     *\n     * @description\n     * Service provides an interface to manage tips state.\n     * The service is available only on run phase.\n     */\n    class TipsService implements ITipsService {\n        private tips: any[]; // todo\n\n        constructor(\n            private $rootScope: ng.IRootScopeService,\n            private pipPopoverService: pip.controls.IPopoverService,\n            private pipTipData: ITipDataService\n            // private pipRest: pip.rest.IRestService,\n            // private pipSettingsData: any\n        ) {}\n\n        private checkStatus = (item) => {\n            return item.status === 'completed';\n        }\n\n        private compareRandom = () => {\n            return Math.random() - 0.5;\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipTips.Service.pipTips\n         * @name pipTips.Service.pipTips:filterTips\n         *\n         * @description\n         * Filters passed tips by passed topic and sorts result collection.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L63 View source}\n         *\n         * @param {Array} data  Source array of tips entities\n         * @param {string} topic    Name of topic to filter by it\n         *\n         * @returns {Array} Filtered and sorted collection.\n         *\n         * @example\n         * <pre>\n         *     pipTips.filterTips(tips, 'goals');\n         * </pre>\n         */\n        public filterTips(data: any[], topic: string) {\n            this.tips = [];\n            let tipsCollection = _.filter(data, this.checkStatus);\n\n            for (let index = 0; index < tipsCollection.length; index++) {\n                const t = _.find(tipsCollection[index].topics, (t) => {\n                    return t == topic;\n                });\n\n                if (t) {\n                    this.tips.push(tipsCollection[index]);\n                }\n            }\n\n            this.tips.sort(this.compareRandom);\n\n            return this.tips;\n        }\n\n        public tipController($scope, $timeout, pipMedia) {\n            const init = () => {\n                $scope.title = $scope.locals.tips[$scope.index].title[$scope.locals.ln];\n                $scope.content = $scope.locals.tips[$scope.index].content[$scope.locals.ln];\n                // todo grab pictures\n                // if ($scope.locals.tips[$scope.index].pic_id) {\n                //     $scope.image = this.pipRest.serverUrl + '/api/parties/' + $scope.locals.tips[$scope.index].creator_id +\n                //         '/files/' + $scope.locals.tips[$scope.index].pic_id + '/content';\n                // }\n\n                $scope.link = $scope.locals.tips[$scope.index].more_url;\n\n                if ($scope.image) {\n                    $timeout(() => {\n                        const backdropElement = $('.pip-popover-backdrop'),\n                            popover = backdropElement.find('.pip-popover');\n\n                        popover.find('.pip-pic').css('background-image', 'url(' + $scope.image + ')');\n                    }, 100);\n                }\n            }\n\n            $scope.index = 0;\n            $scope.pipMedia = pipMedia;\n\n            init();\n\n            $scope.onNextClick = () => {\n                $scope.index++;\n\n                if ($scope.index === $scope.locals.tips.length) {\n                    this.pipPopoverService.hide();\n                } else {\n                    init();\n                    this.pipPopoverService.resize();\n                }\n            };\n\n            $scope.$on('pipWindowResized', init);\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipTips.Service.pipTips\n         * @name pipTips.Service.pipTips:showTips\n         *\n         * @description\n         * Shows tip to user.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L144 View source}\n         *\n         * @param {Array} tips  Array of tips\n         * @param {string} ln   Chosen language\n         * @param {Object=} [$event=null]    Event object\n         *\n         * @example\n         * <pre>\n         *      pipTips.showTips(tips, 'en');\n         * </pre>\n         */\n        public showTips(tips: any[], ln: string, $event ? : any) {\n            if (tips && tips.length > 0) {\n                this.pipPopoverService.hide();\n                this.pipPopoverService.show({\n                    element: $event ? $event.currentTarget : null,\n                    class: 'pip-tip',\n                    cancelCallback: function () {\n                        return false;\n                    },\n                    locals: {\n                        tips: tips,\n                        ln: ln || 'en'\n                    },\n                    controller: ['$scope', '$timeout', 'pipMedia', this.tipController],\n                    templateUrl: 'tips/TipTemplate.html'\n                });\n            }\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipTips.Service.pipTips\n         * @name pipTips.Service.pipTips:firstShowTips\n         *\n         * @description\n         * Shows a tip\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L181 View source}\n         *\n         * @param {Array} tips  Collection of tips\n         * @param {string} [ln='en']   Language for tip content\n         * @param {string} topic    Name of needed topic\n         * @param {Object} settings Settings object\n         * @param {Object} [dayC=2]   Days amount throughout tips should be shown\n         */\n        public firstShowTips(tips: any[], language: string, topic: string, settings: any, dayC: number) {\n            // let ln = language || 'en',\n            //     dayCount = dayC || 2,\n            //     now = new Date(),\n            //     show;\n\n            // if (settings && settings[topic].tips) {\n            //     show = (now.getTime() - new Date(settings[topic].tips).getTime()) / (1000 * 60 * 60 * 24);\n\n            //     // TODO [apidhirnyi] Extract the same code part into the function\n            //     if (show > dayCount) {\n            //         this.pipPopoverService.hide();\n            //         this.showTips(tips, ln);\n            //         settings[topic].tips = new Date();\n            //         this.pipSettingsData.saveSettings(settings, topic);\n            //     }\n            // } else if (settings[topic]) {\n            //     this.pipPopoverService.hide();\n            //     this.showTips(tips, ln);\n            //     settings[topic].tips = new Date();\n            //     this.pipSettingsData.saveSettings(settings, topic);\n            // }\n        }\n\n        /**\n         * @ngdoc method\n         * @methodOf pipTips.Service.pipTips\n         * @name pipTips.Service.pipTips:getTips\n         *\n         * @description\n         * Returns tips collection according to topic.\n         *\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L220 View source}\n         *\n         * @param {Object} party    User's party object\n         * @param {string} ln       Language for tip content\n         * @param {string} topic    Name of needed topic\n         * @param {Function} callback   Callback function. It gets tips collection as argument.\n         */\n        public getTips(party: any, ln: string, topic: string, callback ?: (...args) => void) {\n\n            this.pipTipData.readTips({},\n                (result) => {\n                    this.filterTips(result.data, topic);\n\n                    if (callback) {\n                        callback(this.tips);\n                    }\n\n                    return this.tips;\n                },\n                () => {\n                    return null;\n                }\n            );\n        }\n    }\n\n    angular.module('pipTips.Service', ['pipGuidance.Templates', 'pipControls', 'pipTipData'])\n        .service('pipTips', TipsService);\n}","(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('guidance/GuidanceDialog.html',\n    '<md-dialog class=\"pip-dialog pip-guidance-dialog layout-column\" width=\"768\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-header layout-row\"><h3 class=\"rm16 flex\">{{$ctrl.title | translate}}</h3><md-button class=\"pip-dialog-close\" ng-click=\"$ctrl.onCancel()\" aria-label=\"{{::\\'CLOSE\\' | translate}}\"><span class=\"icon-cross\"></span></md-button></div><div class=\"pip-body\"><div class=\"pip-content\"><pip-picture pip-src=\"$ctrl.imageUrl\" ng-hide=\"!$ctrl.imageUrl || $ctrl.imageUrl == \\'\\'\" class=\"bm16 center-block\" ng-style=\"{ width: $ctrl.imageWidth, height: $ctrl.imageHeight, display: \\'block\\' }\"></pip-picture><div class=\"bm16\" ng-bind-html=\"{{$ctrl.getContent($ctrl.content)}}\"></div><md-button class=\"md-raised md-accent w-stretch\" ng-click=\"$ctrl.onAction()\" ng-hide=\"!$ctrl.action || $ctrl.action==\\'\\'\" arial-label=\"{{$ctrl.action | translate}}\">{{::action | translate}}</md-button><md-checkbox aria-label=\"{{\\'DO_NOT_SHOW\\' | translate}}\" class=\"w-stretch m0 tm16 regular_14\" ng-model=\"$ctrl.hideToggle\" ng-change=\"$ctrl.onHideToggle()\" ng-show=\"$ctrl.showHideToggle\">{{::\\'GUIDANCE_DO_NOT_SHOW\\' | translate}}</md-checkbox></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('intro_guidance/IntroGuidanceDialog.html',\n    '<md-dialog class=\"pip-dialog pip-guidance-dialog pip-guide-preview layout-column\" md-theme=\"{{$ctrl.theme}}\" ng-keydown=\"$ctrl.onKeyDown($event)\"><div ng-if=\"!$ctrl.$routing\" ng-swipe-left=\"$ctrl.onNextPage()\" ng-swipe-right=\"$ctrl.onBackPage()\" class=\"h-stretch flex layout layout-column\" ng-style=\"{\\'background-color\\':$ctrl.data.pages[$ctrl.number].color}\"><div class=\"layout layout-row layout-align-space-between-center layout-align-xs-center-center w-stretch pip-guide-page pip-scroll-y\"><md-button ng-click=\"$ctrl.onBackPage()\" class=\"md-icon-button lm8 flex-fixed hide-xs\" aria-label=\"BACK\" ng-disabled=\"$ctrl.transaction.busy() || $ctrl.number == 0\"><md-icon md-svg-icon=\"icons:arrow-left\" class=\"pip-arrow-button\" ng-class=\"{\\'opacity-disabled\\' :$ctrl.number == 0}\"></md-icon></md-button><div style=\"visibility: hidden; position: fixed; width:0px; height: 0px;\" ng-if=\"$ctrl.isOpen\"><div ng-repeat=\"page in $ctrl.data.pages\"><img style=\"visibility: hidden; position: absolute\" ng-if=\"page.pic_uri\" src=\"{{page.pic_uri}}\" aria-hidden=\"true\" alt=\"\"> <img style=\"visibility: hidden; position: absolute\" ng-if=\"page.pic_id_url\" src=\"{{page.pic_id_url}}\" aria-hidden=\"true\" alt=\"\"></div></div><div class=\"layout layout-column layout-align-center-center bm16\"><div class=\"pip-pic\" ng-if=\"$ctrl.data.pages[$ctrl.number].pic_uri\" ng-style=\"{\\'background-image\\':\\'url(\\' + $ctrl.data.pages[$ctrl.number].pic_uri + \\')\\'}\"></div><div class=\"pip-pic\" ng-if=\"$ctrl.data.pages[$ctrl.number].pic_id_url\" ng-style=\"{\\'background-image\\':\\'url(\\' + $ctrl.data.pages[$ctrl.number].pic_id_url + \\')\\'}\"></div><div class=\"layout layout-column layout-align-center-center pip-text\"><p class=\"pip-preview-title\" ng-if=\"$ctrl.data.pages[$ctrl.number].title[$ctrl.ln]\" ng-bind-html=\"$ctrl.data.pages[$ctrl.number].title[$ctrl.ln]\"></p><p class=\"pip-preview-content\" ng-if=\"$ctrl.data.pages[$ctrl.number].content[$ctrl.ln]\" ng-bind-html=\"$ctrl.data.pages[$ctrl.number].content[$ctrl.ln]\"></p></div></div><md-button ng-click=\"$ctrl.onNextPage()\" class=\"rm8 flex-fixed hide-xs md-icon-button\" aria-label=\"DOWN\" ng-disabled=\"$ctrl.transaction.busy() || $ctrl.number == $ctrl.data.pages.length - 1\"><md-icon md-svg-icon=\"icons:arrow-right\" class=\"pip-arrow-button\" ng-class=\"{\\'opacity-disabled\\' : $ctrl.number == $ctrl.data.pages.length - 1}\"></md-icon></md-button></div><div class=\"flex-fixed flex w-stretch pip-guide-page-footer bp16\" ng-style=\"{\\'background-color\\':$ctrl.data.pages[$ctrl.number].color}\"><div class=\"layout-row layout-align-center-center\" ng-if=\"$ctrl.data.pages.length > 1\"><md-icon ng-repeat=\"radio in $ctrl.data.pages\" ng-click=\"$ctrl.onChangePage($index)\" class=\"pip-radio-button\" md-svg-icon=\"{{radio != $ctrl.data.pages[$ctrl.number] ? \\'icons:radio-off\\' : \\'icons:circle\\'}}\"></md-icon></div><div class=\"h64 layout-row layout-align-xs-space-between-center layout-align-center-center\"><md-button ng-click=\"$ctrl.onBackPage()\" class=\"lm8 flex-fixed md-icon-button\" ng-if=\"$ctrl.pipMedia(\\'xs\\')\" aria-label=\"BACK\" ng-disabled=\"$ctrl.transaction.busy() || $ctrl.number == 0\"><md-icon md-svg-icon=\"icons:arrow-left\" class=\"pip-arrow-button\" ng-class=\"{\\'opacity-disabled\\' :$ctrl.number == 0}\"></md-icon></md-button><md-button ng-click=\"$ctrl.onClose()\" ng-if=\"$ctrl.number == $ctrl.data.pages.length - 1\" class=\"pip-button-got rm8 lm8 md-raised\" ng-style=\"{ \\'color\\':$ctrl.data.pages[$ctrl.number].color }\" aria-label=\"NEXT\" ng-disabled=\"$ctrl.transaction.busy()\">{{ :: \\'GUIDE_COMPLETE_BUTTON\\' | translate }}</md-button><md-button ng-click=\"$ctrl.onClose()\" ng-if=\"$ctrl.number != $ctrl.data.pages.length - 1\" class=\"pip-button-got rm8 lm8 pip-button-got-not-raised\" ng-style=\"{ \\'background-color\\':$ctrl.data.pages[$ctrl.number].color}\" aria-label=\"NEXT\" ng-disabled=\"$ctrl.transaction.busy()\">{{ :: \\'GUIDE_COMPLETE_BUTTON\\' | translate }}</md-button><md-button ng-click=\"$ctrl.onNextPage()\" class=\"rm8 flex-fixed md-icon-button\" ng-if=\"$ctrl.pipMedia(\\'xs\\')\" aria-label=\"DOWN\" ng-disabled=\"$ctrl.transaction.busy() || $ctrl.number == $ctrl.data.pages.length - 1\"><md-icon md-svg-icon=\"icons:arrow-right\" class=\"pip-arrow-button\" ng-class=\"{\\'opacity-disabled\\' : $ctrl.number == $ctrl.data.pages.length - 1}\"></md-icon></md-button></div></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('quotes/QuoteTemplate.html',\n    '<img src=\"images/quotes.svg\" class=\"pip-bg\"><div class=\"pip-content pip-popover-content lp24-flex rp24-flex pip-scroll\"><div>{{ ::content | translate }}</div></div><div class=\"pip-footer lm24-flex rm24-flex position-bottom layout-row layout-align-start-center\"><div class=\"pip-author flex color-secondary-text\">{{ ::author | translate }}</div><md-button ng-click=\"onNextClick()\" class=\"tm0 bm0 rm0\">{{ ::\\'NEXT\\' | translate }}</md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tips/TipTemplate.html',\n    '<div ng-if=\"title\" class=\"pip-title p24-flex flex-fixed bp16\">{{ title | translate }}</div><div class=\"pip-content pip-popover-content lp24-flex rp24-flex text-body1 bm64 pip-scroll\" ng-class=\"{\\'tm24\\' : !title }\"><div ng-if=\"image && pipMedia(\\'gt-xs\\')\" class=\"pip-pic\"></div><pip-markdown pip-text=\"content\" pip-rebind=\"true\"></pip-markdown></div><div class=\"pip-footer lm24-flex rm24-flex position-bottom layout-row layout-align-start-center\"><a ng-if=\"link\" target=\"_blank\" href=\"{{ link }}\" class=\"text-body2 flex\">{{:: \\'MORE_URL\\' | translate }}</a><div ng-if=\"!link\" class=\"flex\"></div><md-button ng-click=\"onNextClick()\" class=\"rm0\">{{:: \\'NEXT\\' | translate }}</md-button></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-suite-guidance-html.min.js.map\n"]}